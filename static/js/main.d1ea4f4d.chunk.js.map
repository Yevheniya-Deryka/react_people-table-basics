{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","components/Navbar/NavigationLink/NavigationLink.tsx","components/Navbar/Navbar.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","personSlug","useParams","findParent","personName","parent","find","map","born","died","motherName","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","handleLoadPeople","peopleFromServer","useEffect","length","NavigationLink","link","text","isActive","Navbar","role","HomePage","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d1ea4f4d.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { PersonLink } from '../PersonLink';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  const findParent = (personName: string | null) => {\n    const parent = people.find(person => person.name === personName);\n\n    if (parent) {\n      return (\n        <PersonLink person={parent} />\n      );\n    }\n\n    return personName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className={'table is-striped is-hoverable'\n        + 'is-narrow is-fullwidth'}\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': personSlug === person.slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{findParent(person.motherName)}</td>\n            <td>{findParent(person.fatherName)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { Person } from '../../types';\nimport { Loader } from '../../components/Loader';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const handleLoadPeople = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n      setHasError(false);\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    handleLoadPeople();\n  });\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!isLoading && !hasError) && (\n            <>\n              {people.length === 0\n                ? (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )\n                : (\n                  <PeopleTable people={people} />\n                )}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  link: string;\n  text: string;\n};\n\nexport const NavigationLink: React.FC<Props> = ({ link, text }) => (\n  <NavLink\n    to={link}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { NavigationLink } from './NavigationLink';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavigationLink link=\"/\" text=\"Home\" />\n        <NavigationLink link=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","export const NotFoundPage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}